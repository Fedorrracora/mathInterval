name: Build wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]    # при публикации релиза

jobs:
  build_wheels:
    name: Build ${{ matrix.os }} ${{ matrix.cibw_archs }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # ---- Linux ----
          - os: ubuntu-latest
            cibw_archs: x86_64
            cibw_env: CIBW_ARCHS_LINUX
          - os: ubuntu-latest
            cibw_archs: aarch64    # ARM64 через QEMU
            cibw_env: CIBW_ARCHS_LINUX

          # ---- macOS ----
          - os: macos-latest
            cibw_archs: x86_64
            cibw_env: CIBW_ARCHS_MACOS
          - os: macos-latest
            cibw_archs: arm64
            cibw_env: CIBW_ARCHS_MACOS

          # ---- Windows ----
          - os: windows-latest
            cibw_archs: AMD64
            cibw_env: CIBW_ARCHS_WINDOWS
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.4

      - name: Build wheels
        run: |
          echo "Building wheels for ${{ matrix.os }} arch=${{ matrix.cibw_archs }}"
          python -m cibuildwheel --output-dir wheelhouse
        env:
          ${{ matrix.cibw_env }}: ${{ matrix.cibw_archs }}
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BUILD_VERBOSITY: 1

      - name: Upload wheels (GitHub Artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}
          path: wheelhouse/*.whl
